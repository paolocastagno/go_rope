version: "3.9"

services:
  cli_tn0:
    image: rope-client:${TAG:-latest}
    command:
      - -config=/config.json
    volumes: # test monroe config
      - type: bind
        source: ${CLIENT_CONF} # Client configuration
        target: /config.json
        read_only: true
      - type: bind
        source: ${CLIENT_APP} # Application configuration
        target: /appconfig.toml
        read_only: true    

  cli_tn1:
    image: rope-client:${TAG:-latest}
    command:
      - -config=/config.json
    volumes: # test monroe config
      - type: bind
        source: ${CLIENT_CONF} # Client configuration
        target: /config.json
        read_only: true
      - type: bind
        source: ${CLIENT_APP} # Application configuration
        target: /appconfig.toml
        read_only: true    

  background:
    image: rope-client:${TAG:-latest}
    privileged: true
    command:
      - -config=/config.json
    volumes: # test monroe config
      - type: bind
        source: ${BACKGROUND_CONF} # Client configuration
        target: /config.json
        read_only: true
      - type: bind
        source: ${BACKGROUND_APP} # Application configuration
        target: /appconfig.toml
        read_only: true
          
  proxy:
    image: rope-routing:${TAG:-latest}
    command:
      - -idDevice=proxy
      - -sinks=${PROXY_SNKS}
      - -nexthop=${PROXY_DEST}
      - -timeout=30s
      - -listen=0.0.0.0:4040
      - -loggerAddress=${LOGGER}
      - -loggerToken=${TOKEN}
      - -confFile=/conf.toml
      - -loggerBucket=${BUCKET}
    volumes:
      - type: bind
        source: ${PROXY_CONF}
        target: /conf.toml
        read_only: true
  
  hop:
    image: rope-routing:${TAG:-latest}
    command:
      - -idDevice=hop
      - -sinks=${HOP_SNKS}
      - -nexthop=${HOP_DEST}
      - -timeout=30s
      - -listen=0.0.0.0:4040
      - -loggerAddress=${LOGGER}
      - -loggerToken=${TOKEN}
      - -confFile=/conf.toml
      - -loggerBucket=${BUCKET}
    volumes:
      - type: bind
        source: ${HOP_CONF}
        target: /conf.toml
        read_only: true 
    ports:
      - "4444:4040/udp"


  srv_trn:
    image: rope-server:${TAG:-latest}
    privileged: true
    command:
      - -listen=0.0.0.0:4040
      - -idDevice=serv_trn
      - -queueLen=1000000
      - -workers=1
      - -loggerAddress=${LOGGER}
      - -loggerToken=${TOKEN}
      - -loggerBucket=${BUCKET}
      - -appConfig=/appconfig.toml
    ports:
      - "4343:4040/udp"
    volumes:
      - type: bind
        source: ${SERVERTRN_APP}
        target: /appconfig.toml
        read_only: true  
    depends_on:
      - logger

  srv_md0:
    image: rope-server:${TAG:-latest}
    privileged: true
    command:
      - -listen=0.0.0.0:4040
      - -idDevice=srv_md0
      - -queueLen=1000000
      - -workers=1
      - -loggerAddress=${LOGGER}
      - -loggerToken=${TOKEN}
      - -loggerBucket=${BUCKET}
      - -appConfig=/appconfig.toml
    volumes:
      - type: bind
        source: ${SERVERMD0_APP}
        target: /appconfig.toml
        read_only: true
    ports:
      - "43001:4040/udp"
      
  srv_md1:
    image: rope-server:${TAG:-latest}
    privileged: true
    command:
      - -listen=0.0.0.0:4040
      - -idDevice=srv_md1
      - -queueLen=1000000
      - -workers=1
      - -loggerAddress=${LOGGER}
      - -loggerToken=${TOKEN}
      - -loggerBucket=${BUCKET}
      - -appConfig=/appconfig.toml
    volumes:
      - type: bind
        source: ${SERVERMD1_APP}
        target: /appconfig.toml
        read_only: true
    ports:
      - "43002:4040/udp"

  # First time setup run: docker-compose exec logger influx setup
  logger:
    image: influxdb:alpine
    ports:
      - "8086:8086/tcp"
    volumes:
      - "./influxdbv2:/var/lib/influxdb2"
      - "./:/res"
      - type: bind
        source: ./.env
        target: /.env
        read_only: true
      - type: bind
        source: ./scripts/retrieve.sh
        target: /retrieve.sh
        read_only: false
    
